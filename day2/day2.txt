변수 초기화 시
int -> 0 으로
char -> ''
String -> null or ""

변수의 사용
	변수명을 사용한다.

	data = 10;	// 저장공간
	data + 4;	// 값	
	data = data + 1; //저장공간, 값

** printf() : 서식문자를 사용하여, 원하는 형태의 값을 출력

서식문자(format) : printf에서 사용 가능!
	따옴표 안에서 작성한다.

	%d	: 정수(10진수 decimal)
	%f	: 실수(float)
	%c	: 문자(character)
	%s	: 문자열(String)

	%o	: 정수(8진수 octal)
	%x	: 정수(16진수 hexadecimal)
	%X	: 16진수 알파벳 대문자 표기


형변환
	자동 형변환
		정수 + 정수 = 정수
		정수 + 실수 = 실수
		3 + 0.0 = 3.0

		문자 + 정수 = 정수
		'A' + 5 = 70
	
	강제 형변환
		(자료형)값
		(int)3.95 == 3

문자열 형변환
	- 문자열을 정수로
		Integer.parseInt("문자열");

	- 문자열을 실수로
		Double.parseDouble("문자열");

	- 문자열을 문자로
		문자열.charAt(번호);

	- 다른 값을 문자열로
		다른 값 + ""

+(더하기)
	- 연산 : 문자열이 아닌 정수 또는 실수 일 때 연산이다.
	- 연결 : 문자열이 포함되어 있다면 연결이다.
---------------------------------------------------------------------
입력 메소드
	입력 상태 : 커서가 깜빡이고 있는 상태
	입력 메소드를 사용하기 위해서는 입력 클래스를 먼저 공부해야 한다.
	입력 받기 전 사용자가 어떤 값을 입력할지를 출력 메소드로 먼저 알려준다.

A.b : A안에 b  
입력 클래스(Scanner)
	Scanner sc = new Scanner(System.in);

	문자열 입력 메소드
	sc.next();
		사용자가 입력한 문자열 값이다.
		콘솔창에 커서를 깜빡여주고(입력상태)
		통채로가 입력한 값이다.
		사용자가 공백이나 엔터(\n)를 입력하면
		구분점으로 판단하여 각 문자열값을 분리시켜준다.

		입력: 장 호상
		첫번째 sc.next() : 장
		두번째 sc.next() : 호상

	sc.nextLine();
		사용자가 입력한 문자열 값이다.
		콘솔창에 커서를 깜빡여주고(입력상태)
		통채로가 입력한 값이다.
		사용자가 공백이나 엔터를 입력해도 값으로 판단하여
		입력한 그대로를 저장해준다.		
		
		입력 : 장 호상
		sc.nextLine() : 장 호상



-----------------------------------------------------------------------

연산자
	기능이 있는 특수문자, 특정단어

연산자 우선순위
	최우선 연산자
	단항 연산자
	산술 연산자
	쉬프트 연산자
	관계 연산자
	논리 연산자
	삼항 연산자
	대입 연산자
	
결합성
	하나의 수식에 같은 우선순위의 연산자가 여러 개 사용되었을 때
	알맞는 방향으로 결합되어 연산되는 성질

비트연산
	논리 연산자
		
	& AND(논리곱)	: 두 비트 모두 1일 때 1
	| OR(논리합)	: 둘 중 하나라도 1이면 1
	^ XOR(배타논리합)	: 두 비트가 서로 다르면 1

	단항 연산자

	~ NOT(논리부정)	: 0은 1로, 1은 0으로 변경
			  ~a = -a - 1

	0001  1(2)
          + 1111 -1(2) = 15 ( 부호비트에 따라 양,음이 달라짐)
            10000
~(-1) -> 0000  ~0 -> -1
	~ a = ~a-1
	
	부호 비트
		가장 앞에 있는 비트는 부호비트이며, 비트는 우에서 좌로
		읽기 때문에 최좌측이 최상위 비트이다.
		최상위 비트가 0이면 양수, 1이면 음수이다.

	쉬프트 연산자 -> 삼성 실무 면접 좌 쉬프트시 값이 커지나? 그럴수도 아닐수도
		<<(좌쉬프트)	: a << b, a를 b만큼 좌로 비트이동
		>>(우쉬프트)	: a >> b, a를 b만큼 우로 비트이동

		빈 자리는 0으로 채워지고(음수는 1로 채워진다)
		비트 수를 넘어가면 자동으로 잘린다.
		>>>를 사용하면 양수든 음수든 빈 자리가 모두 0으로 채워진다.

----------------------------------------------------------------------
조건식
	결과가 참 또는 거짓 중 하나가 나오는 식

논리형
	JAVA에서는 참을 true, 거짓을 false라는 값으로 표현한다.
	이 값들을 담을 수 있는 저장공간의 종류는 boolean이며, 1byte이다.
	
	boolean isTrue = false;


	관계 연산자
		==	: 같다
		!=	: 같지 않다
		>, <	: 초과, 미만
		>=, <=	: 이상, 이하

	논리 연산자
		&& AND	: A && B, 두 조건식 모두 참이면 참
		|| OR	: A || B, 두 조건식 중 하나라도 참이면 참

	단항 연산자
		! NOT	: !A, A 조건식이 참이면 거짓으로, 거짓이면 참으로 변경
---------------------------------------------------------------------
삼항 연산자(? :)
	조건식 ? 참 : 거짓
	
	참과 거짓 자리에 각각 값만 작성할 수 있고,
	조건식에 결과에 따라서 참 또는 거짓 자리에 작성한 값이 나온다.
	삼항 연산자는 통채로가 참 또는 거짓에 작성한 값이다.
