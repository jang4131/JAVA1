JAVA1 4/10

OT

		장 호 상


  입문하기에 쉽고 !! 사용할 때가 많다!!


	
  장점 : 이식성(호환성) 좋다.
   -> JVM(Java virtual machine)


  [프로그래밍]
    컴퓨터가 이해하게 코드를 짜는거



	JVM
	- Class Loader : 메모리 적재
  	- Runtime Data Areas : RAM 영역 관리
	- Execution engine : 소스코드를 읽고 실행


	JRE(Java Runtime Environment)
	 : JVM을 생성하는 부분
    	   JVM에서 실행할 때 필요한 라이브러리 파일들과 
     	   기타 파일들을 가지고 있다.

	JDK(Java Development Kit)
        	 : JRE외에 개발에 필요한 도구들을 가지고 있다.

	[컴파일] : 소스코드를 컴퓨터가 이해할 수 있게 변환
	[컴파일러] : 위에 행위를 하는 것

	Eclipse 이클립스
		: 통합 IDE(JAVA 컴파일러 포함)

	
	* 폴더 셋팅
	* Eclipse 설치



기본 구성 요소
	- 프로젝트
		- 패키지
			- 클래스
				- 메소드(method)


System.out.println("~~~~~"); -> ~~~~를 콘솔에 출력해(한줄)
System.out.print("~~~~");  붙여서(줄 바꿈 X)
syso 입력하고 cntrl + space (println 자동 완성)


주석 -> 설명 글     // 사용 한라인 주석
 : 컴파일러가 무시 한다.

	변 수(저장공간) - variable
	   x 	= 	10;
          이름(변수명)   대입	값
                          (연산자)


	변수 선언 : 어떤 변수를 사용하겠다고 알리는 것
	int 	x 	= 	10;
          (자료형-type)

	자료형	type	byte	값(ex)

	정수형	int	4	-1, 0, 15 ...
	실수형	float	4	0.5F, 0.2F ....
		double	8	0.5(D), 0.2 ....
	문자형	char	2	'a', 'b', '1' ...
	문자열	String	???	"장호상", "234" ....

	자료형 변수명 = 값;

변수 선언시 주의사항
 	1. 같은 이름의 변수 선언은 불가(중복 불가)
	2. 초기화를 해준다.
	3. 되도록 선언부에 한꺼번에 선언한다.( 메소드 or 클래스 상단 )
	

변수명 주의사항
	1. 숫자는 맨 앞에 쓸 수 없다.
	2. 특수문자(_ 제외)를 쓸 수 없다.
	3. 공백을 사용할 수 없다.
	4. 명사로 사용한다.
	5. 뜻이 있는 단어를 선택한다. ex) date, number, age, name ..
	6. 되도록 소문자를 이용(Camel 표기법)

	good_boy


변수를 사용하는 이유
	1. 반복 되는 값들을 쉽게 관리
	2. 값의 의미를 부여



































